library(tidyverse)
library(pheatmap)
data <- read_csv("FINAL.csv")
data <- data[,colSums(is.na(data))<nrow(data)]      # remove columns with only NA
data <- column_to_rownames(data, "sampleName")
data <- data[grepl("M12", data$time) ,]
data_metabolites <- data[, c(3:110)]
data_metabolites <- data_metabolites[, colSums(data_metabolites != 0) > 0]
data_metabolites <- as.data.frame(
round(apply(data_metabolites, 2,
function(x) (log10(x+1)-mean(log10(x+1), na.rm=T))/sd(log10(x+1),
na.rm=T)),3))
ahei <- data[, c(147:158)]
ahei <- ahei[, -c(11,12)]
# selected <- list()
#
# for(i in 1:ncol(ahei)){
#
#   fit <- glmnet(as.matrix(data_metabolites),
#                 as.matrix(ahei[, i]),
#                 family="gaussian",
#                 alpha = 1,
#                 nlambda = 100)
#
#   lambdas <- quantile(fit$lambda, 0.90)
#   tmp_coeffs <- coef(fit, s = lambdas)
#
#   selected[[i]] <- data.frame(name = tmp_coeffs@Dimnames[[1]][tmp_coeffs@i + 1],
#                               coefficients = tmp_coeffs@x)
#   selected[[i]] <- selected[[i]][order(abs(selected[[i]]$coefficients), decreasing = T) ,]
#
#   max_var <- if (nrow(selected[[i]]) < 15) nrow(selected[[i]]) else 15
#   print(paste0("Number of selected variables for A", i, " is ", max_var))
#
#   selected[[i]] <- selected[[i]][c(1:max_var),]
#   colnames(selected[[i]])[2] <- paste0("A",i)
#   print(selected[[i]])
#
#   }
#
# merged_selected <- as.data.frame(Reduce(function(...) merge(..., by="name", all=TRUE), selected))
# merged_selected[is.na(merged_selected)] <- 0
# merged_selected <- column_to_rownames(merged_selected, "name")
#
# merged_selected_wo_intercept <- merged_selected[-which(rownames(merged_selected) == "(Intercept)") ,]
selected <- list()
for(i in 1:ncol(ahei)){
fit <- glmnet(as.matrix(data_metabolites),
as.matrix(ahei[, i]),
family="gaussian",
alpha = 1,
nlambda = 100)
cvfit <- cv.glmnet(as.matrix(data_metabolites),
as.matrix(ahei[, i]),
type.measure = "mse",
nfolds = 20)
plot(cvfit)
tmp_coeffs <- coef(cvfit, s = "lambda.min")
selected[[i]] <- data.frame(name = tmp_coeffs@Dimnames[[1]][tmp_coeffs@i + 1],
coefficients = tmp_coeffs@x)
selected[[i]] <- selected[[i]][order(abs(selected[[i]]$coefficients), decreasing = T) ,]
max_var <- if (nrow(selected[[i]]) < 15) nrow(selected[[i]]) else 15
print(paste0("Number of selected variables for A", i, " is ", max_var))
selected[[i]] <- selected[[i]][c(1:max_var),]
colnames(selected[[i]])[2] <- paste0("A",i)
print(selected[[i]])
}
merged_selected <- as.data.frame(Reduce(function(...) merge(..., by="name", all=TRUE), selected))
merged_selected[is.na(merged_selected)] <- 0
merged_selected <- column_to_rownames(merged_selected, "name")
merged_selected_wo_intercept <- merged_selected[-which(rownames(merged_selected) == "(Intercept)") ,]
merged_selected_wo_intercept <- merged_selected_wo_intercept[, colSums(merged_selected_wo_intercept != 0) > 0]
cvfit
?glmnet::cv.glmnet()
?glmnet
?glmnet::cv.elnet
?glmnet::auc
1 - cv.lasso$cvm/var(y)
knitr::opts_chunk$set(fig.height = 10, fig.width = 20, fig.align = 'center')
library(glmnet)
library(readxl)
library(ggplot2)
library(tidyverse)
library(pheatmap)
library(FactoMineR)
library(factoextra)
library(viridis)
data <- read_excel("FINAL.xlsx")
data <- data[,colSums(is.na(data))<nrow(data)]      # remove columns with only NA
data <- data[, colSums(data != 0, na.rm = T) > 0]   # remove columns with only zeros
#normalization
data[, c(5:106)] <- as.data.frame(round(apply(data[, c(5:106)], 2,
function(x) (log10(x+1)-mean(log10(x+1), na.rm=T))/sd(log10(x+1), na.rm=T)),3))
data <- column_to_rownames(data, "sampleName")
i<-1
ahei <- data[, c(142:151)]
cvfit <- cv.glmnet(as.matrix(data[, c(4:105)]),
as.matrix(ahei[, i]),
type.measure = "mse",
nfolds = 20)
print(1 - cvfit$cvm/var(as.matrix(ahei[, i])))
var(as.matrix(ahei[, i]))
var(as.matrix(ahei[, i]))
print(1 - cvfit$cvm/var(ahei[, i]))
print((1 - cvfit$cvm/var(ahei[, i]))^2)
library(glmnet)
library(readxl)
library(ggplot2)
library(tidyverse)
library(pheatmap)
library(FactoMineR)
library(factoextra)
library(viridis)
data <- read_excel("FINAL.xlsx")
data <- data[,colSums(is.na(data))<nrow(data)]      # remove columns with only NA
data <- data[, colSums(data != 0, na.rm = T) > 0]   # remove columns with only zeros
#normalization
data[, c(5:106)] <- as.data.frame(round(apply(data[, c(5:106)], 2,
function(x) (log10(x+1)-mean(log10(x+1), na.rm=T))/sd(log10(x+1), na.rm=T)),3))
data <- column_to_rownames(data, "sampleName")
ahei <- data[, c(142:151)]
data <- read_excel("/Users/pol/Dropbox/LASSO_Metabolites_AHEI/FINAL.xlsx")
data <- data[,colSums(is.na(data))<nrow(data)]      # remove columns with only NA
data <- data[, colSums(data != 0, na.rm = T) > 0]   # remove columns with only zeros
#normalization
data[, c(5:106)] <- as.data.frame(round(apply(data[, c(5:106)], 2,
function(x) (log10(x+1)-mean(log10(x+1), na.rm=T))/sd(log10(x+1), na.rm=T)),3))
data <- column_to_rownames(data, "sampleName")
ahei <- data[, c(142:151)]
?glmnet::cv.coxnet
cvfit <- cv.glmnet(as.matrix(data[, c(4:105)]),
as.matrix(ahei[, i]),
type.measure = "mse",
nfolds = 20)
plot(cvfit)
cvfit <- cv.glmnet(as.matrix(data[, c(4:105)]),
as.matrix(ahei[, i]),
type.measure = "mse",
nfolds = 1)
cvfit <- cv.glmnet(as.matrix(data[, c(4:105)]),
as.matrix(ahei[, i]),
type.measure = "mse",
nfolds = 3)
?cv.glmnet
cvfit <- cv.glmnet(as.matrix(data[, c(4:105)]),
as.matrix(ahei[, i]),
type.measure = "mse",
nfolds = 20)
plot(cvfit)
?cv.coxnet
?cv.glmnet
cvfit <- cv.glmnet(as.matrix(data[, c(4:105)]),
as.matrix(ahei[, i]),
type.measure = "mse",
nfolds = 20)
i<-1
1 - cvfit$cvm/var(ahei[, i])
library(readxl)
library(tidyverse)
library(FactoMineR)
library(factoextra)
data <- read_excel("FINAL.xlsx")
data <- data[,colSums(is.na(data))<nrow(data)]      # remove columns with only NA
data <- data[, colSums(data != 0, na.rm = T) > 0]   # remove columns with only zeros
#normalization
data[, c(5:106)] <- as.data.frame(round(apply(data[, c(5:106)], 2,
function(x) (log10(x+1)-mean(log10(x+1),
na.rm=T))/sd(log10(x+1),
na.rm=T)),3))
#data <- column_to_rownames(data, "sampleName")
####
data_mfa <- data[, -4]
### ABERS
data_mfa_abers <- data_mfa[data$centre == 2 ,]
data_mfa_abers$centre <- NULL
data_mfa_abers <- data_mfa_abers[,colSums(is.na(data_mfa_abers))<nrow(data_mfa_abers)]
data_mfa_abers$sampleName <- substr(data_mfa_abers$sampleName, start = 1, stop = 4)
data_mfa_abers_M0 <- data_mfa_abers[!(grepl("M06", data_mfa_abers$time) |
grepl("M12", data_mfa_abers$time)) ,]
data_mfa_abers_M0$time <- NULL
colnames(data_mfa_abers_M0)[2:ncol(data_mfa_abers_M0)] <- paste0("M0_",
colnames(data_mfa_abers_M0)[2:ncol(data_mfa_abers_M0)])
data_mfa_abers_M06 <- data_mfa_abers[grepl("M06", data_mfa_abers$time) ,]
data_mfa_abers_M06$time <- NULL
colnames(data_mfa_abers_M06)[2:ncol(data_mfa_abers_M0)] <- paste0("M06_",
colnames(data_mfa_abers_M06)[2:ncol(data_mfa_abers_M0)])
data_mfa_abers_M12 <- data_mfa_abers[grepl("M12", data_mfa_abers$time) ,]
data_mfa_abers_M12$time <- NULL
colnames(data_mfa_abers_M12)[2:ncol(data_mfa_abers_M0)] <- paste0("M12_",
colnames(data_mfa_abers_M12)[2:ncol(data_mfa_abers_M0)])
ABERS <- merge(data_mfa_abers_M0, data_mfa_abers_M06, by = "sampleName")
ABERS <- merge(ABERS, data_mfa_abers_M12, by = "sampleName")
ABERS$sampleName <- NULL
### GRENOBLE
data_mfa_grenoble <- data_mfa[data$centre == 1 ,]
data_mfa_grenoble$centre <- NULL
data_mfa_grenoble <- data_mfa_grenoble[,colSums(is.na(data_mfa_grenoble))<nrow(data_mfa_grenoble)]
data_mfa_grenoble$sampleName <- substr(data_mfa_grenoble$sampleName, start = 1, stop = 4)
data_mfa_grenoble_M0 <- data_mfa_grenoble[!(grepl("M06", data_mfa_grenoble$time) |
grepl("M12", data_mfa_grenoble$time)) ,]
data_mfa_grenoble_M0$time <- NULL
colnames(data_mfa_grenoble_M0)[2:ncol(data_mfa_grenoble_M0)] <- paste0("M0_",
colnames(data_mfa_grenoble_M0)[2:ncol(data_mfa_grenoble_M0)])
data_mfa_grenoble_M06 <- data_mfa_grenoble[grepl("M06", data_mfa_grenoble$time) ,]
data_mfa_grenoble_M06$time <- NULL
colnames(data_mfa_grenoble_M06)[2:ncol(data_mfa_grenoble_M0)] <- paste0("M06_",
colnames(data_mfa_grenoble_M06)[2:ncol(data_mfa_grenoble_M0)])
data_mfa_grenoble_M12 <- data_mfa_grenoble[grepl("M12", data_mfa_grenoble$time) ,]
data_mfa_grenoble_M12$time <- NULL
colnames(data_mfa_grenoble_M12)[2:ncol(data_mfa_grenoble_M0)] <- paste0("M12_",
colnames(data_mfa_grenoble_M12)[2:ncol(data_mfa_grenoble_M0)])
GRENOBLE <- merge(data_mfa_grenoble_M0, data_mfa_grenoble_M06, by = "sampleName")
GRENOBLE <- merge(GRENOBLE, data_mfa_grenoble_M12, by = "sampleName")
GRENOBLE$sampleName <- NULL
###
res_mfa <- MFA(GRENOBLE,
group = c(102,36,11,118,
102,36,11,118,
102,36,11,118),
type = c("s","c","s","c",
"s","c","s","c",
"s","c","s","c"),
name.group = c("metabolites_M0", "DR_M0", "AHEI_M0", "FFQ_M0",
"metabolites_M06", "DR_M06", "AHEI_M06", "FFQ_M06",
"metabolites_M12", "DR_M12", "AHEI_M12", "FFQ_M12"),
graph = FALSE)
object_res_mfa <- as.data.frame(res_mfa$group$coord)
object_res_mfa$time <- c(rep("M0",4),rep("M06",4),rep("M12",4))
p1 <- ggplot(object_res_mfa, aes(`Dim.1`, `Dim.2`, color = time)) +
geom_point() +
theme_bw() +
viridis::scale_fill_viridis() +
xlab(paste0("Dim 1 (", round(res_mfa$eig[1,2],2), "%)")) +
ylab(paste0("Dim 2 (", round(res_mfa$eig[2,2],2), "%)")) +
ggtitle("GRENOBLE") +
geom_text(aes(label = rownames(object_res_mfa)),hjust=0, vjust=0)
###
res_mfa <- MFA(ABERS,
group = c(102,36,12,135,
102,36,12,135,
102,36,12,135),
type = c("s","c","s","c",
"s","c","s","c",
"s","c","s","c"),
name.group = c("metabolites_M0", "DR_M0", "AHEI_M0", "FFQ_M0",
"metabolites_M06", "DR_M06", "AHEI_M06", "FFQ_M06",
"metabolites_M12", "DR_M12", "AHEI_M12", "FFQ_M12"),
graph = FALSE)
object_res_mfa <- as.data.frame(res_mfa$group$coord)
object_res_mfa$time <- c(rep("M0",4),rep("M06",4),rep("M12",4))
p2 <- ggplot(object_res_mfa, aes(`Dim.1`, `Dim.2`, color = time)) +
geom_point() +
theme_bw() +
viridis::scale_fill_viridis() +
xlab(paste0("Dim 1 (", round(res_mfa$eig[1,2],2), "%)")) +
ylab(paste0("Dim 2 (", round(res_mfa$eig[2,2],2), "%)")) +
ggtitle("ABERS") +
geom_text(aes(label = rownames(object_res_mfa)),hjust=0, vjust=0)
data <- read_excel("Dropbox/LASSO_Metabolites_AHEI/FINAL.xlsx")
library(readxl)
library(tidyverse)
library(FactoMineR)
library(factoextra)
data <- read_excel("Dropbox/LASSO_Metabolites_AHEI/FINAL.xlsx")
data <- data[,colSums(is.na(data))<nrow(data)]      # remove columns with only NA
data <- data[, colSums(data != 0, na.rm = T) > 0]   # remove columns with only zeros
#normalization
data[, c(5:106)] <- as.data.frame(round(apply(data[, c(5:106)], 2,
function(x) (log10(x+1)-mean(log10(x+1),
na.rm=T))/sd(log10(x+1),
na.rm=T)),3))
#data <- column_to_rownames(data, "sampleName")
####
data_mfa <- data[, -4]
### ABERS
data_mfa_abers <- data_mfa[data$centre == 2 ,]
data_mfa_abers$centre <- NULL
data_mfa_abers <- data_mfa_abers[,colSums(is.na(data_mfa_abers))<nrow(data_mfa_abers)]
data_mfa_abers$sampleName <- substr(data_mfa_abers$sampleName, start = 1, stop = 4)
data_mfa_abers_M0 <- data_mfa_abers[!(grepl("M06", data_mfa_abers$time) |
grepl("M12", data_mfa_abers$time)) ,]
data_mfa_abers_M0$time <- NULL
colnames(data_mfa_abers_M0)[2:ncol(data_mfa_abers_M0)] <- paste0("M0_",
colnames(data_mfa_abers_M0)[2:ncol(data_mfa_abers_M0)])
data_mfa_abers_M06 <- data_mfa_abers[grepl("M06", data_mfa_abers$time) ,]
data_mfa_abers_M06$time <- NULL
colnames(data_mfa_abers_M06)[2:ncol(data_mfa_abers_M0)] <- paste0("M06_",
colnames(data_mfa_abers_M06)[2:ncol(data_mfa_abers_M0)])
data_mfa_abers_M12 <- data_mfa_abers[grepl("M12", data_mfa_abers$time) ,]
data_mfa_abers_M12$time <- NULL
colnames(data_mfa_abers_M12)[2:ncol(data_mfa_abers_M0)] <- paste0("M12_",
colnames(data_mfa_abers_M12)[2:ncol(data_mfa_abers_M0)])
ABERS <- merge(data_mfa_abers_M0, data_mfa_abers_M06, by = "sampleName")
ABERS <- merge(ABERS, data_mfa_abers_M12, by = "sampleName")
ABERS$sampleName <- NULL
### GRENOBLE
data_mfa_grenoble <- data_mfa[data$centre == 1 ,]
data_mfa_grenoble$centre <- NULL
data_mfa_grenoble <- data_mfa_grenoble[,colSums(is.na(data_mfa_grenoble))<nrow(data_mfa_grenoble)]
data_mfa_grenoble$sampleName <- substr(data_mfa_grenoble$sampleName, start = 1, stop = 4)
data_mfa_grenoble_M0 <- data_mfa_grenoble[!(grepl("M06", data_mfa_grenoble$time) |
grepl("M12", data_mfa_grenoble$time)) ,]
data_mfa_grenoble_M0$time <- NULL
colnames(data_mfa_grenoble_M0)[2:ncol(data_mfa_grenoble_M0)] <- paste0("M0_",
colnames(data_mfa_grenoble_M0)[2:ncol(data_mfa_grenoble_M0)])
data_mfa_grenoble_M06 <- data_mfa_grenoble[grepl("M06", data_mfa_grenoble$time) ,]
data_mfa_grenoble_M06$time <- NULL
colnames(data_mfa_grenoble_M06)[2:ncol(data_mfa_grenoble_M0)] <- paste0("M06_",
colnames(data_mfa_grenoble_M06)[2:ncol(data_mfa_grenoble_M0)])
data_mfa_grenoble_M12 <- data_mfa_grenoble[grepl("M12", data_mfa_grenoble$time) ,]
data_mfa_grenoble_M12$time <- NULL
colnames(data_mfa_grenoble_M12)[2:ncol(data_mfa_grenoble_M0)] <- paste0("M12_",
colnames(data_mfa_grenoble_M12)[2:ncol(data_mfa_grenoble_M0)])
GRENOBLE <- merge(data_mfa_grenoble_M0, data_mfa_grenoble_M06, by = "sampleName")
GRENOBLE <- merge(GRENOBLE, data_mfa_grenoble_M12, by = "sampleName")
GRENOBLE$sampleName <- NULL
###
res_mfa <- MFA(GRENOBLE,
group = c(102,36,11,118,
102,36,11,118,
102,36,11,118),
type = c("s","c","s","c",
"s","c","s","c",
"s","c","s","c"),
name.group = c("metabolites_M0", "DR_M0", "AHEI_M0", "FFQ_M0",
"metabolites_M06", "DR_M06", "AHEI_M06", "FFQ_M06",
"metabolites_M12", "DR_M12", "AHEI_M12", "FFQ_M12"),
graph = FALSE)
object_res_mfa <- as.data.frame(res_mfa$group$coord)
object_res_mfa$time <- c(rep("M0",4),rep("M06",4),rep("M12",4))
p1 <- ggplot(object_res_mfa, aes(`Dim.1`, `Dim.2`, color = time)) +
geom_point() +
theme_bw() +
viridis::scale_fill_viridis() +
xlab(paste0("Dim 1 (", round(res_mfa$eig[1,2],2), "%)")) +
ylab(paste0("Dim 2 (", round(res_mfa$eig[2,2],2), "%)")) +
ggtitle("GRENOBLE") +
geom_text(aes(label = rownames(object_res_mfa)),hjust=0, vjust=0)
###
res_mfa <- MFA(ABERS,
group = c(102,36,12,135,
102,36,12,135,
102,36,12,135),
type = c("s","c","s","c",
"s","c","s","c",
"s","c","s","c"),
name.group = c("metabolites_M0", "DR_M0", "AHEI_M0", "FFQ_M0",
"metabolites_M06", "DR_M06", "AHEI_M06", "FFQ_M06",
"metabolites_M12", "DR_M12", "AHEI_M12", "FFQ_M12"),
graph = FALSE)
object_res_mfa <- as.data.frame(res_mfa$group$coord)
object_res_mfa$time <- c(rep("M0",4),rep("M06",4),rep("M12",4))
p2 <- ggplot(object_res_mfa, aes(`Dim.1`, `Dim.2`, color = time)) +
geom_point() +
theme_bw() +
viridis::scale_fill_viridis() +
xlab(paste0("Dim 1 (", round(res_mfa$eig[1,2],2), "%)")) +
ylab(paste0("Dim 2 (", round(res_mfa$eig[2,2],2), "%)")) +
ggtitle("ABERS") +
geom_text(aes(label = rownames(object_res_mfa)),hjust=0, vjust=0)
##
ggpubr::ggarrange(p1, p2, ncol = 1, nrow = 2)
version
runGitHub( "POMA", "pcastellanoescuder")
shiny::runGitHub("POMA", "pcastellanoescuder")
bedtools bamtobed -i '/Users/pol/Dropbox/BAMs/EF_H3K27me3_R1.bam'
.Library
installed.packages()
fs::path_real(.Library)
library(tidyverse)
ipt <- installed.packages() %>%
as_tibble()
ipt
nrow(ipt)
devtools::install_github("jimhester/lookup")
usethis::create_package("~/Desktop/foofactors")
usethis::use_course("hadley/fordogs")
library(tidyverse)
iris %>%
group_by("Species")
iris %>%
group_by(Species)
user()
install.packages("fcuk")
library(fcuk)
lenght(c(1,2,3,4,5))
# HTML to PDF
library(webshot)
file_name <- paste0("file://", normalizePath("poma_slides_useR2019.html"))
webshot(file_name, "poma_slides_useR2019.pdf")
file_name <- paste0("file://", normalizePath("poma_slides_useR2019.html"))
webshot(file_name, "poma_slides_useR2019.pdf")
library(devtools)
install_github("isubirana/compareGroups")
library(devtools)
install_github("isubirana/compareGroups")
library(devtools)
install_github("isubirana/compareGroups")
install.packages("isubirana/compareGroups")
install.packages("compareGroups")
library(mixOmics)
BiocManager::repositories()
BiocInstaller::biocinstallRepos()
shiny::runApp('Dropbox/Shiny_apps/POMA')
remotes::install_github("Thinkr-open/golem")
4 + 11 + 2 + 3
4 + 11 + 2 + 3 - 3 + 2
19+14
remotes::install_github("rstudio/shinymeta")
devtools::install_github("rstudio/shiny")
remotes::install_github("rstudio/shinymeta")
library(tidyverse)
library(shinymeta)
shiny::runApp('Dropbox/Shiny_apps/POMA')
runApp()
runApp('Dropbox/Shiny_apps/POMA')
runApp('Dropbox/Shiny_apps/POMA')
runApp('Dropbox/Shiny_apps/POMA')
runApp()
runApp('Dropbox/Shiny_apps/POMA')
runApp('Dropbox/Shiny_apps/POMA')
devtools::install_version("shiny", version = "0.10.2.2")
runApp('Dropbox/Shiny_apps/POMA')
devtools::install_version("shiny", version = "1.3.2")
runApp('Dropbox/Shiny_apps/POMA')
runApp('Dropbox/Shiny_apps/POMA')
runApp()
runApp('Dropbox/Shiny_apps/POMA')
update.packages()
update.packages("shiny")
runApp('Dropbox/Shiny_apps/POMA')
peakAnno1
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(clusterProfiler)
library(tidyverse)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
##
files <- list.files(path = "BED",
full.names = TRUE, recursive = FALSE, include.dirs = TRUE)
peakAnno1 <- annotatePeak(files[[1]], tssRegion = c(-1, 1),
TxDb = txdb, annoDb = "org.Hs.eg.db")
peakAnno1 <- annotatePeak(files[[1]], tssRegion = c(-100, 100),
TxDb = txdb, annoDb = "org.Hs.eg.db")
usethis::create_package("~/Dropbox/RFooDB")
library(classyfireR)
library(clasyfireR)
TOTAL <- 942
ub <- 400
gym <- 45
fvf <- 22
visa <- 70
dropbox <- 120
malta <- 185
toulouse <- 190
TOTAL - (gym + fvf + visa + dropbox + malta + toulouse) + ub
packageVersion("limma")
BiocManager::install("limma")
packageVersion("limma")
sessionInfo()
library(pool)
library(tidyverse)
dbCon <- dbPool(RMariaDB::MariaDB(),
host = '178.128.44.207',
username = 'Cook2HealthUB',
password = 'EO9lsgjdB/Gqn+lvG+IhjA==',
db = 'Cook2HealthDB')
install.packages("RMariaDB")
dbCon <- dbPool(RMariaDB::MariaDB(),
host = '178.128.44.207',
username = 'Cook2HealthUB',
password = 'EO9lsgjdB/Gqn+lvG+IhjA==',
db = 'Cook2HealthDB')
AHEI <- dbCon %>% tbl('AHEI') %>% filter(CENTRE == '01' & PHASE == 'M0') %>% collect()
AHEI <- dbCon %>% tbl('AHEI') %>% filter(CENTRE == '01' & PHASE == 'M0') %>% collect()
dbCon
dbCon <- dbPool(RMariaDB::MariaDB(),
host = '178.128.44.207',
username = 'Cook2HealthUB',
password = 'EO9lsgjdB/Gqn+lvG+IhjA==',
db = 'Cook2HealthDB')
AHEI <- dbCon %>% tbl('AHEI') %>% filter(CENTRE == '01' & PHASE == 'M0') %>% collect()
dbCon <- dbPool(RMariaDB::MariaDB(), group = 'Cook2Health')
AHEI <- dbCon %>% tbl('AHEI') %>% filter(CENTRE == '01' & PHASE == 'M0') %>% collect()
dbCon <- dbPool(RMySQL::MySQL(),
host = '178.128.44.207',
username = 'Cook2HealthUB',
password = 'EO9lsgjdB/Gqn+lvG+IhjA==',
db = 'Cook2HealthDB')
AHEI <- dbCon %>% tbl('AHEI') %>% filter(CENTRE == '01' & PHASE == 'M0') %>% collect()
View(AHEI)
AHEI <- dbCon %>% tbl('AHEI') %>% filter(CENTRE == '01' & PHASE == 'M0')
100*(7188-891)
7188/891
891/7188
(891/7188)*100
100-((891/7188)*100)
296.45 + 98.26
(296.45 + 98.26)-376.40
sudo ubuntu-drivers autoinstall
sudo apt-get remove --purge nvidia-*
switch()
?switch()
?devtools::install_github
setwd("~/Dropbox/FoodBiomarkerOntology")
fbonto <- vroom::vroom("FBOnto_Annotation_File.csv", delim = ",")
View(fbonto)
fbonto <- vroom::vroom("Annotation_file.csv", delim = ",")
View(fbonto)
fbonto$MetaboliteName <- gsub("_", " ", fbonto$MetaboliteName)
write.csv(fbonto, "FBOntjhbebher.csv", row.names = F)
fbonto <- vroom::vroom("FBOnto_Annotation_File.csv", delim = ",")
