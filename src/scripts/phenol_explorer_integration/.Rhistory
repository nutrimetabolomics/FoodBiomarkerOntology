set_names(annotations_nona$InChIKey) %>%
enframe() %>%
unnest(cols = c(value)) %>%
filter(Classification != "Organic compounds")
out_fobi <- unique(df_class$Classification[!df_class$Classification %in% metabolites_fobi$name])
df_class %>%
select(name, Level, Classification) %>%
pivot_wider(id_cols = name, names_from = Level, values_from = Classification, values_fn = list) %>%
unnest(1:7) %>%
filter(. %in% out_fobi)
df_class %>%
select(name, Level, Classification) %>%
pivot_wider(id_cols = name, names_from = Level, values_from = Classification, values_fn = list) %>%
unnest(1:7) %>%
filter_all(~ . %in% out_fobi)
out_fobi
df_class %>%
select(name, Level, Classification) %>%
pivot_wider(id_cols = name, names_from = Level, values_from = Classification, values_fn = list) %>%
unnest(1:7) %>%
filter_if(~ . %in% out_fobi)
?any_vars()
df_class %>%
select(name, Level, Classification) %>%
pivot_wider(id_cols = name, names_from = Level, values_from = Classification, values_fn = list) %>%
unnest(1:7)
df_class %>%
select(name, Level, Classification) %>%
pivot_wider(id_cols = name, names_from = Level, values_from = Classification, values_fn = list) %>%
unnest(1:7) %>%
filter_all(any_vars(. %in% out_fobi))
out_fobi
df_class %>%
select(name, Level, Classification) %>%
pivot_wider(id_cols = name, names_from = Level, values_from = Classification, values_fn = list) %>%
unnest(1:7) %>%
filter_all(any_vars(. %in% out_fobi)) %>%
pivot_longer(cols = -name)
df_class %>%
select(name, Level, Classification) %>%
pivot_wider(id_cols = name, names_from = Level, values_from = Classification, values_fn = list) %>%
unnest(1:7) %>%
filter_all(any_vars(. %in% out_fobi)) %>%
pivot_longer(cols = -name, values_to = "type", names_repair = "unique")
df_class %>%
select(name, Level, Classification) %>%
pivot_wider(id_cols = name, names_from = Level, values_from = Classification, values_fn = list) %>%
unnest(1:7) %>%
filter_all(any_vars(. %in% out_fobi))
df_class %>%
select(name, Level, Classification) %>%
pivot_wider(id_cols = name, names_from = Level, values_from = Classification, values_fn = list) %>%
unnest(1:7) %>%
filter_all(any_vars(. %in% out_fobi))
df_class %>%
select(name, Level, Classification) %>%
pivot_wider(id_cols = name, names_from = Level, values_from = Classification, values_fn = list) %>%
unnest(1:7) %>%
filter_all(any_vars(. %in% out_fobi)) %>%
pivot_longer(cols = -name, values_to = "type", names_repair = "unique")
df_class %>%
select(name, Level, Classification) %>%
pivot_wider(id_cols = name, names_from = Level, values_from = Classification, values_fn = list) %>%
unnest(1:7) %>%
filter_all(any_vars(. %in% out_fobi)) %>%
pivot_longer(cols = -name, values_to = "class", names_repair = "unique") %>%
outer(which(class %in% out_fobi), -1:1, `+`)
df_class %>%
select(name, Level, Classification) %>%
pivot_wider(id_cols = name, names_from = Level, values_from = Classification, values_fn = list) %>%
unnest(1:7) %>%
filter_all(any_vars(. %in% out_fobi)) %>%
pivot_longer(cols = -name, values_to = "class", names_repair = "unique") %>%
group_by(name...1)
tmp <- df_class %>%
select(name, Level, Classification) %>%
pivot_wider(id_cols = name, names_from = Level, values_from = Classification, values_fn = list) %>%
unnest(1:7) %>%
filter_all(any_vars(. %in% out_fobi)) %>%
pivot_longer(cols = -name, values_to = "class", names_repair = "unique")
tmp[which(rownames(tmp) %in% out_fobi) + c(-1, 1), ]
tmp
tmp[which(tmp$class %in% out_fobi) + c(-1, 1), ]
tmp[which(tmp$class %in% out_fobi) + c(-1), ]
tmp <- df_class %>%
select(name, Level, Classification) %>%
pivot_wider(id_cols = name, names_from = Level, values_from = Classification, values_fn = list) %>%
unnest(1:7) %>%
filter_all(any_vars(. %in% out_fobi)) %>%
pivot_longer(cols = -name, values_to = "class", names_repair = "unique")
tmp <- tmp[which(tmp$class %in% out_fobi) + c(-1), ]
tmp
tmp %>%
group_by(name...1) %>%
pivot_wider(names_from = class)
tmp %>%
group_by(name...1) %>%
pivot_wider(names_from = class, values_from = class)
tmp
tmp %>%
select(-1) %>%
group_by(name...1) %>%
pivot_wider(names_from = name...2, values_from = class)
tmp %>%
select(-1) %>%
group_by(name...2) %>%
pivot_wider(names_from = name...2, values_from = class)
tmp %>%
select(-1) %>%
group_by(name...2) %>%
pivot_wider(names_from = name...2, values_from = class, values_fn = list)
tmp %>%
group_by(name...1) %>%
pivot_wider(id_cols = name, names_from = name...2, values_from = class, values_fn = list)
tmp %>%
group_by(name...1) %>%
pivot_wider(id_cols = name...1, names_from = name...2, values_from = class, values_fn = list)
tmp %>%
group_by(name...1) %>%
pivot_wider(id_cols = name...1, values_from = class, values_fn = list)
tmp %>%
group_by(name...1) %>%
pivot_wider(names_from = name...1, values_from = class, values_fn = list)
tmp
Query <- submit_query(label = 'query_1',
input = out_fobi,
type = 'PARENT')
)
,
''
)
?submit_query
out_fobi
direct_parent(out_fobi)
df_class <- purrr::map(df, classification) %>%
set_names(annotations_nona$InChIKey) %>%
enframe() %>%
unnest(cols = c(value)) %>%
filter(Classification != "Organic compounds")
out_fobi <- unique(df_class$Classification[!df_class$Classification %in% metabolites_fobi$name])
tmp <- df_class %>%
select(name, Level, Classification) %>%
pivot_wider(id_cols = name, names_from = Level, values_from = Classification, values_fn = list) %>%
unnest(1:7) %>%
filter_all(any_vars(. %in% out_fobi)) %>%
pivot_longer(cols = -name, values_to = "class", names_repair = "unique")
tmp <- tmp[which(tmp$class %in% out_fobi) + c(-1), ]
View(tmp)
tmp <- df_class %>%
select(name, Level, Classification) %>%
pivot_wider(id_cols = name, names_from = Level, values_from = Classification, values_fn = list) %>%
unnest(1:7) %>%
filter_all(any_vars(. %in% out_fobi)) %>%
pivot_longer(cols = -name, values_to = "class", names_repair = "unique")
tmp <- tmp[which(tmp$class %in% out_fobi) + c(-1,1), ]
tmp
tmp %>%
filter(!duplicated(name...2, class))
tmp <- df_class %>%
select(name, Level, Classification) %>%
pivot_wider(id_cols = name, names_from = Level, values_from = Classification, values_fn = list) %>%
unnest(1:7) %>%
filter_all(any_vars(. %in% out_fobi)) %>%
pivot_longer(cols = -name, values_to = "class", names_repair = "unique")
tmp
out_fobi
df_class <- purrr::map(df, classification) %>%
set_names(annotations_nona$InChIKey) %>%
enframe() %>%
unnest(cols = c(value)) %>%
filter(Classification != "Organic compounds")
ls_class <- list()
ls_class <- list()
for (i in 1:nrow(df_class)) {
if(df_class$Classification[i] %in% out_fobi){
ls_class[[i]] <- data.frame(parent = df_class$Classification[i-1], child = df_class$Classification[i])
}
}
bind_rows(ls_class)
fobi_new_classes <- bind_rows(ls_class) %>%
filter(!duplicated(.))
View(fobi_new_classes)
length(fobi_new_classes$child %in% out_fobi)
openxlsx::write.xlsx(fobi_new_classes, "data/fobi_new_classes.xlsx")
cat(out_fobi, sep = "\n")
View(fobi)
composition_fobi
annotations
composition_fobi
annotations <- annotations %>%
rename(compound = 1) %>%
mutate(compound = tolower(compound))
composition_fobi %>%
left_join(annotations, by = "compound")
composition_fobi_anno <- composition_fobi %>%
left_join(annotations, by = "compound")
View(composition_fobi_anno)
composition_fobi_anno <- composition_fobi %>%
left_join(annotations, by = "compound") %>%
mutate(ChEBI = ifelse(is.na(ChEBI), paste0("CHEBI", `ChEBI ID`), ChEBI))
composition_fobi_anno <- composition_fobi %>%
left_join(annotations, by = "compound")
composition_fobi_anno <- composition_fobi %>%
left_join(annotations, by = "compound") %>%
mutate(ChEBI = ifelse(is.na(ChEBI), paste0("CHEBI:", `ChEBI ID`), ChEBI))
composition_fobi_anno <- composition_fobi %>%
left_join(annotations, by = "compound") %>%
mutate(ChEBI = ifelse(is.na(ChEBI), paste0("CHEBI:", `ChEBI ID`), ChEBI)) %>%
na_if("CHEBI:NA")
View(annotations_nona)
getwd()
library(tidyverse)
library(classyfireR)
composition <- readxl::read_xlsx("data/composition-data.xlsx") %>%
rownames_to_column()
foods_fobitools <- fobitools::annotate_foods(foods = composition[, c(1,4)])
annotated_foods <- foods_fobitools$annotated %>%
dplyr::rename(food = FOOD_NAME)
composition_fobi <- composition %>%
right_join(annotated_foods, by = "food") %>%
select(FOBI_ID, FOBI_NAME, food, compound_group,
compound_sub_group, compound, publication_ids, pubmed_ids)
View(composition_fobi)
View(composition)
compounds <- readxl::read_xls("data/compounds.xls") %>%
select(Name, `ChEBI ID`, `PubChem ID`) %>%
dplyr::rename(compound = Name)
composition_fobi <- composition_fobi %>%
left_join(compounds, by = "compound") %>%
mutate(compound = tolower(compound))
metabolites_fobi <- fobitools::parse_fobi(terms = "FOBI:01501", get = "des") %>%
select(1:4) %>%
mutate(compound = tolower(name))
metabolites_fobi$compound[metabolites_fobi$compound %in% composition_fobi$compound]
unique(composition_fobi$compound[composition_fobi$compound %in% metabolites_fobi$compound])
metabolites_fobi
composition_fobi <- composition_fobi %>%
left_join(metabolites_fobi, by = "compound") %>%
filter(!duplicated(.))
composition_fobi %>%
filter(is.na(name)) %>%
filter(!duplicated(compound)) %>%
pull(compound) %>%
str_to_title() %>%
cat(sep = "\n")
annotations_1 <- readr::read_csv("data/cts-20210714170715.csv") %>%
na_if("No result") %>%
na_if("undefined")
annotations_2 <- readr::read_csv("data/cts-20210714172629.csv") %>%
na_if("No result") %>%
na_if("undefined")
annotations <- left_join(annotations_1, annotations_2, by = "Chemical Name") %>%
select(-Score)
View(annotations)
# number of compounds in Phenol-Explorer
length(unique(composition$compound))
annotations_nona <- annotations %>%
filter(!is.na(InChIKey))
# save(df, file = "data/classyfireR.rda")
load("data/classyfireR.rda")
View(annotations)
df_class <- purrr::map(df, classification) %>%
set_names(annotations_nona$InChIKey) %>%
enframe() %>%
unnest(cols = c(value)) %>%
filter(Classification != "Organic compounds")
out_fobi <- unique(df_class$Classification[!df_class$Classification %in% metabolites_fobi$name])
ls_class <- list()
for (i in 1:nrow(df_class)) {
if(df_class$Classification[i] %in% out_fobi){
ls_class[[i]] <- data.frame(parent = df_class$Classification[i-1], child = df_class$Classification[i])
}
}
fobi_new_classes <- bind_rows(ls_class) %>%
filter(!duplicated(.))
annotations_nona
annotations <- annotations_nona %>%
rename(compound = 1) %>%
mutate(compound = tolower(compound))
composition_fobi_anno <- composition_fobi %>%
left_join(annotations, by = "compound") %>%
mutate(ChEBI = ifelse(is.na(ChEBI), paste0("CHEBI:", `ChEBI ID`), ChEBI)) %>%
na_if("CHEBI:NA")
View(composition_fobi_anno)
View(df_class)
metabolites_fobi_2 <- fobitools::parse_fobi(terms = "FOBI:01501", get = "des")
View(metabolites_fobi_2)
metabolites_fobi_2 <- fobitools::parse_fobi(terms = "FOBI:01501", get = "des") %>%
select(name) %>%
mutate(name_lw = tolower(name))
metabolites_fobi_2 <- fobitools::parse_fobi(terms = "FOBI:01501", get = "des") %>%
select(name) %>%
mutate(compound = tolower(name))
composition_fobi_anno %>%
left_join(metabolites_fobi_2, by = "compound")
composition_fobi_anno %>%
left_join(metabolites_fobi_2, by = "compound") %>%
filter(!duplicated(.))
9198+10
composition_fobi_anno <- composition_fobi_anno %>%
left_join(metabolites_fobi_2, by = "compound") %>%
filter(!duplicated(.))
composition_fobi_anno <- composition_fobi_anno %>%
left_join(metabolites_fobi_2, by = "compound") %>%
filter(!duplicated(.)) %>%
dplyr::rename(original_name = name.y)
composition_fobi_anno <- composition_fobi %>%
left_join(annotations, by = "compound") %>%
mutate(ChEBI = ifelse(is.na(ChEBI), paste0("CHEBI:", `ChEBI ID`), ChEBI)) %>%
na_if("CHEBI:NA")
composition_fobi_anno <- composition_fobi_anno %>%
left_join(metabolites_fobi_2, by = "compound") %>%
filter(!duplicated(.)) %>%
dplyr::rename(original_name = name.y)
composition_fobi_anno %>%
filter(is.na(original_name)) %>%
pull(compound) %>%
cat(sep = "\n")
composition_fobi_anno %>%
filter(is.na(original_name)) %>%
pull(compound) %>%
unique() %>%
cat(sep = "\n")
composition_fobi_anno %>%
filter(is.na(original_name)) %>%
pull(compound) %>%
unique() %>%
length()
composition_fobi_anno %>%
filter(is.na(original_name)) %>% View()
composition_fobi_anno <- composition_fobi %>%
left_join(annotations, by = "compound") %>%
mutate(ChEBI = ifelse(is.na(ChEBI), paste0("CHEBI:", `ChEBI ID`), ChEBI)) %>%
na_if("CHEBI:NA")
composition_fobi_anno <- composition_fobi %>%
right_join(annotations, by = "compound") %>%
mutate(ChEBI = ifelse(is.na(ChEBI), paste0("CHEBI:", `ChEBI ID`), ChEBI)) %>%
na_if("CHEBI:NA")
composition_fobi_anno <- composition_fobi_anno %>%
left_join(metabolites_fobi_2, by = "compound") %>%
filter(!duplicated(.)) %>%
dplyr::rename(original_name = name.y)
composition_fobi_anno %>%
filter(is.na(original_name)) %>%
pull(compound) %>%
unique() %>%
length()
composition_fobi_anno <- composition_fobi %>%
right_join(annotations, by = "compound") %>%
mutate(ChEBI = ifelse(is.na(ChEBI), paste0("CHEBI:", `ChEBI ID`), ChEBI)) %>%
na_if("CHEBI:NA")
composition_fobi_anno <- composition_fobi_anno %>%
left_join(metabolites_fobi_2, by = "compound") %>%
filter(!duplicated(.)) %>%
dplyr::rename(original_name = name.y)
composition_fobi_anno %>%
filter(is.na(original_name)) %>%
pull(compound) %>%
unique() %>%
cat(sep = "\n")
composition_fobi_anno %>%
filter(is.na(original_name)) %>%
pull(compound) %>%
unique() %>%
cat(sep = "\n")
composition_fobi_anno %>%
filter(is.na(original_name)) %>%
pull(compound) %>%
unique() %>%
length()
composition_fobi_anno %>%
filter(is.na(original_name)) %>%
pull(compound) %>%
unique() %>%
# length() %>%
cat(sep = "\n")
composition_fobi_anno <- composition_fobi %>%
right_join(annotations, by = "compound") %>%
mutate(ChEBI = ifelse(is.na(ChEBI), paste0("CHEBI:", `ChEBI ID`), ChEBI)) %>%
na_if("CHEBI:NA")
composition_fobi_anno <- composition_fobi_anno %>%
left_join(metabolites_fobi_2, by = "compound") %>%
filter(!duplicated(.)) %>%
dplyr::rename(original_name = name.y)
composition_fobi_anno %>%
filter(is.na(original_name)) %>%
pull(compound) %>%
unique() %>%
# length() %>%
cat(sep = "\n")
composition_fobi_anno %>%
filter(is.na(original_name)) %>%
pull(compound) %>%
unique() %>%
length()
View(composition_fobi_anno)
composition_fobi %>%
right_join(annotations, by = "compound")
composition_fobi_anno <- composition_fobi %>%
left_join(annotations, by = "compound") %>%
mutate(ChEBI = ifelse(is.na(ChEBI), paste0("CHEBI:", `ChEBI ID`), ChEBI)) %>%
na_if("CHEBI:NA")
composition_fobi_anno <- composition_fobi_anno %>%
left_join(metabolites_fobi_2, by = "compound") %>%
filter(!duplicated(.)) %>%
dplyr::rename(original_name = name.y)
composition_fobi_anno %>%
filter(!is.na(original_name))
relations_fobi <- composition_fobi_anno %>%
filter(!is.na(original_name)) %>%
select(FOBI_NAME, original_name)
View(relations_fobi)
relations_fobi <- composition_fobi_anno %>%
filter(!is.na(original_name)) %>%
select(FOBI_NAME, original_name) %>%
filter(!duplicated(.))
openxlsx::write.xlsx(relations_fobi, "data/relations_fobi.xlsx")
relations_fobi_new <- composition_fobi_anno %>%
filter(is.na(original_name)) %>%
select(FOBI_NAME, compound) %>%
filter(!duplicated(.))
View(relations_fobi_new)
composition_fobi_anno %>%
filter(is.na(original_name))
relations_fobi_new <- composition_fobi_anno %>%
filter(is.na(original_name))
relations_fobi_new <- composition_fobi_anno %>%
filter(is.na(original_name)) %>%
filter(!is.na(InChIKey)) %>%
select(FOBI_NAME, compound, InChIKey) %>%
filter(!duplicated(.))
relations_fobi_new %>%
pull(compound) %>%
unique() %>%
length()
# new metabolites to add
relations_fobi_new %>%
pull(compound) %>%
unique() %>%
# length() %>%
cat(sep = "\n")
relations_fobi_new <- composition_fobi_anno %>%
filter(is.na(original_name)) %>%
filter(!is.na(InChIKey))
colnames(relations_fobi_new)
relations_fobi_new <- composition_fobi_anno %>%
filter(is.na(original_name)) %>%
filter(!is.na(InChIKey)) %>%
select(FOBI_NAME, compound, publication_ids, pubmed_ids, `PubChem ID`, ChEBI:ChemSpider) %>%
filter(!duplicated(.))
# new metabolites to add
relations_fobi_new %>%
pull(compound) %>%
unique() %>%
# length() %>%
cat(sep = "\n")
relations_fobi_new %>%
pull(compound) %>%
unique() %>%
length()
openxlsx::write.xlsx(relations_fobi_new, "data/relations_fobi_new.xlsx")
relations_fobi <- composition_fobi_anno %>%
filter(!is.na(original_name)) %>%
select(FOBI_NAME, publication_ids, pubmed_ids, `PubChem ID`, original_name) %>%
filter(!duplicated(.))
openxlsx::write.xlsx(relations_fobi, "data/relations_fobi.xlsx")
openxlsx::write.xlsx(relations_fobi, "data/relations_fobi.xlsx", overwrite = TRUE)
relations_fobi_new <- composition_fobi_anno %>%
filter(is.na(original_name)) %>%
filter(!is.na(InChIKey)) %>%
select(FOBI_NAME, compound, publication_ids, pubmed_ids, `PubChem ID`, ChEBI:ChemSpider) %>%
filter(!duplicated(.))
relations_fobi_new %>%
pull(compound) %>%
unique() %>%
length()
relations_fobi_new
df_class
df_class2 <- df_class %>%
dplyr::rename(InChIKey = name)
df_class2 <- df_class %>%
dplyr::rename(InChIKey = name) %>%
group_by(InChIKey) %>%
dplyr::slice(n()) %>%
filter(!duplicated(.))
df_class %>%
dplyr::rename(InChIKey = name) %>%
group_by(InChIKey) %>%
dplyr::slice(n())
df_class2 <- df_class %>%
dplyr::rename(InChIKey = name) %>%
group_by(InChIKey) %>%
dplyr::slice(n()) %>%
filter(!duplicated(InChIKey))
df_class2 <- df_class %>%
dplyr::rename(InChIKey = name) %>%
group_by(InChIKey) %>%
dplyr::slice(n()) %>%
filter(!duplicated(InChIKey))
relations_fobi_new %>%
left_join(df_class2, by = "InChIKey")
class_new_metabolites <- relations_fobi_new %>%
left_join(df_class2, by = "InChIKey")
class_new_metabolites
class_new_metabolites <- relations_fobi_new %>%
left_join(df_class2, by = "InChIKey") %>%
select(compound, Classification)
class_new_metabolites
openxlsx::write.xlsx(class_new_metabolites, "data/class_new_metabolites.xlsx")
View(class_new_metabolites)
View(relations_fobi_new)
View(relations_fobi)
