food = str_replace_all(food, "Coffe", "coffee based beverage product"),
food = str_replace_all(food, "Tea", "tea based beverage product"),
food = str_replace_all(food, "Cacao", "cacao food product"),
food = str_replace_all(food, "Whole_Grain_Cereals", "Whole grain cereal products"),
food = str_replace_all(food, "Legumes", "legume food product"),
food = str_replace_all(food, "Nuts", "nut (whole or part)"),
food = str_replace_all(food, "red_wine", "red wine"),
food = str_replace_all(food, "olive_oil", "olive oil"))
table(new_met$food)
library(tidyverse)
library(classyfireR)
new_met <- readxl::read_excel("update ontology.xlsx")
new_met <- new_met %>%
filter(is.na(FOBI)) %>%
filter(!is.na(`INCHI KEY`)) %>%
filter(!is.na(food)) %>%
select(metabolite, food) %>%
separate_rows(food, sep = ",", convert = FALSE) %>%
mutate(food = str_trim(food),
food = str_replace_all(food, "Fruits", "plant fruit food product"),
food = str_replace_all(food, "Vegetables", "vegetable food product"),
food = str_replace_all(food, "Coffe", "coffee based beverage product"),
food = str_replace_all(food, "Tea", "tea based beverage product"),
food = str_replace_all(food, "Cacao", "cacao food product"),
food = str_replace_all(food, "Whole_Grain_Cereals", "Whole grain cereal products"),
food = str_replace_all(food, "Legumes", "legume food product"),
food = str_replace_all(food, "Nuts", "nut (whole or part)"),
food = str_replace_all(food, "red_wine", "red wine"),
food = str_replace_all(food, "olive_oil", "olive oil"),
food = str_replace_all(food, "apple", "apple (whole)"),
food = str_replace_all(food, "Banana", "banana (whole, ripe)"),
food = str_replace_all(food, "Berries", "berry (whole, raw)"),
food = str_replace_all(food, "Whole_Grain_Oat", "whole oats (raw)"))
table(new_met$food)
xlsx::write.xlsx(new_met, "files/relations.xlsx")
new_met <- readxl::read_excel("update ontology.xlsx")
library(tidyverse)
library(classyfireR)
new_met <- readxl::read_excel("update ontology.xlsx")
new_met <- new_met %>%
filter(is.na(FOBI)) %>%
filter(!is.na(`INCHI KEY`))
cat(new_met$metabolite, sep = "\n")
table(new_met$food)
library(tidyverse)
library(classyfireR)
new_met <- readxl::read_excel("update ontology.xlsx")
new_met <- new_met %>%
filter(is.na(FOBI)) %>%
filter(!is.na(`INCHI KEY`)) %>%
filter(!is.na(food)) %>%
select(metabolite, food) %>%
separate_rows(food, sep = ",", convert = FALSE) %>%
mutate(food = str_trim(food),
food = str_replace_all(food, "Fruits", "plant fruit food product"),
food = str_replace_all(food, "Vegetables", "vegetable food product"),
food = str_replace_all(food, "Coffe", "coffee based beverage product"),
food = str_replace_all(food, "Tea", "tea based beverage product"),
food = str_replace_all(food, "Cacao", "cacao food product"),
food = str_replace_all(food, "Whole_Grain_Cereals", "Whole grain cereal products"),
food = str_replace_all(food, "Legumes", "legume food product"),
food = str_replace_all(food, "Nuts", "nut (whole or part)"),
food = str_replace_all(food, "red_wine", "red wine"),
food = str_replace_all(food, "olive_oil", "olive oil"),
food = str_replace_all(food, "apple", "apple (whole)"),
food = str_replace_all(food, "Banana", "banana (whole, ripe)"),
food = str_replace_all(food, "Berries", "berry (whole, raw)"),
food = str_replace_all(food, "Whole_Grain_Oat", "whole oats (raw)"))
table(new_met)
table(new_met$food)
library(tidyverse)
library(classyfireR)
new_met <- readxl::read_excel("update ontology.xlsx")
new_met <- new_met %>%
filter(is.na(FOBI)) %>%
filter(!is.na(`INCHI KEY`)) %>%
filter(!is.na(food)) %>%
select(metabolite, food) %>%
separate_rows(food, sep = ",", convert = FALSE) %>%
mutate(food = str_trim(food),
food = str_replace_all(food, "Fruits", "plant fruit food product"),
food = str_replace_all(food, "Vegetables", "vegetable food product"),
food = str_replace_all(food, "Coffe", "coffee based beverage product"),
food = str_replace_all(food, "Tea", "tea based beverage product"),
food = str_replace_all(food, "Cacao", "cacao food product"),
food = str_replace_all(food, "Whole_Grain_Cereals", "Whole grain cereal products"),
food = str_replace_all(food, "Legumes", "legume food product"),
food = str_replace_all(food, "Nuts", "nut (whole or part)"),
food = str_replace_all(food, "red_wine", "red wine"),
food = str_replace_all(food, "olive_oil", "olive oil"),
food = str_replace_all(food, "apple", "apple (whole)"),
food = str_replace_all(food, "Banana", "banana (whole, ripe)"),
food = str_replace_all(food, "Berries", "berry (whole, raw)"),
food = str_replace_all(food, "Whole_Grain_Oat", "whole oats (raw)"))
# classification_result <- list()
#
# for(i in 1:nrow(new_met)){
#
#   classification_result[[i]] <- get_classification(new_met$`INCHI KEY`[i])
#
# }
xlsx::write.xlsx(new_met, "files/relations.xlsx")
library(tidyverse)
library(classyfireR)
new_met <- readxl::read_excel("update ontology.xlsx")
new_met <- new_met %>%
filter(is.na(FOBI)) %>%
filter(!is.na(`INCHI KEY`)) %>%
filter(!is.na(food)) %>%
select(metabolite, food) %>%
separate_rows(food, sep = ",", convert = FALSE) %>%
mutate(food = str_trim(food),
food = str_replace_all(food, "Fruits", "plant fruit food product"),
food = str_replace_all(food, "Vegetables", "vegetable food product"),
food = str_replace_all(food, "Coffe", "coffee based beverage product"),
food = str_replace_all(food, "Tea", "tea based beverage product"),
food = str_replace_all(food, "Cacao", "cacao food product"),
food = str_replace_all(food, "Whole_Grain_Cereals", "Whole grain cereal products"),
food = str_replace_all(food, "Legumes", "legume food product"),
food = str_replace_all(food, "Nuts", "nut (whole or part)"),
food = str_replace_all(food, "red_wine", "red wine"),
food = str_replace_all(food, "olive_oil", "olive oil"),
food = str_replace_all(food, "apple", "apple (whole)"),
food = str_replace_all(food, "Banana", "banana (whole, ripe)"),
food = str_replace_all(food, "Berries", "berry (whole, raw)"),
food = str_replace_all(food, "Whole_Grain_Oat", "whole oats (raw)"))
library(tidyverse)
library(classyfireR)
new_met <- readxl::read_excel("update ontology.xlsx")
new_met <- new_met %>%
filter(is.na(FOBI)) %>%
filter(!is.na(`INCHI KEY`)) %>%
filter(!is.na(food)) %>%
select(metabolite, food) %>%
separate_rows(food, sep = ",", convert = FALSE) %>%
mutate(food = str_trim(food),
food = str_replace_all(food, "Fruits", "plant fruit food product"),
food = str_replace_all(food, "Vegetables", "vegetable food product"),
food = str_replace_all(food, "Coffe", "coffee based beverage produ"),
food = str_replace_all(food, "Tea", "tea based beverage product"),
food = str_replace_all(food, "Cacao", "cacao food product"),
food = str_replace_all(food, "Whole_Grain_Cereals", "Whole grain cereal products"),
food = str_replace_all(food, "Legumes", "legume food product"),
food = str_replace_all(food, "Nuts", "nut (whole or part)"),
food = str_replace_all(food, "red_wine", "red wine"),
food = str_replace_all(food, "olive_oil", "olive oil"),
food = str_replace_all(food, "apple", "apple (whole)"),
food = str_replace_all(food, "Banana", "banana (whole, ripe)"),
food = str_replace_all(food, "Berries", "berry (whole, raw)"),
food = str_replace_all(food, "Whole_Grain_Oat", "whole oats (raw)"))
library(tidyverse)
library(classyfireR)
new_met <- readxl::read_excel("update ontology.xlsx")
new_met <- new_met %>%
filter(is.na(FOBI)) %>%
filter(!is.na(`INCHI KEY`)) %>%
filter(!is.na(food)) %>%
select(metabolite, food) %>%
separate_rows(food, sep = ",", convert = FALSE) %>%
mutate(food = str_trim(food),
food = str_replace_all(food, "Fruits", "plant fruit food product"),
food = str_replace_all(food, "Vegetables", "vegetable food product"),
food = str_replace_all(food, "Coffe", "coffee based beverage product"),
food = str_replace_all(food, "Tea", "tea based beverage product"),
food = str_replace_all(food, "Cacao", "cacao food product"),
food = str_replace_all(food, "Whole_Grain_Cereals", "Whole grain cereal products"),
food = str_replace_all(food, "Legumes", "legume food product"),
food = str_replace_all(food, "Nuts", "nut (whole or part)"),
food = str_replace_all(food, "red_wine", "red wine"),
food = str_replace_all(food, "olive_oil", "olive oil"),
food = str_replace_all(food, "apple", "apple (whole)"),
food = str_replace_all(food, "Banana", "banana (whole, ripe)"),
food = str_replace_all(food, "Berries", "berry (whole, raw)"),
food = str_replace_all(food, "Whole_Grain_Oat", "whole oats (raw)"))
table(new_met$food)
library(tidyverse)
library(classyfireR)
new_met <- readxl::read_excel("update ontology.xlsx")
new_met <- new_met %>%
filter(is.na(FOBI)) %>%
filter(!is.na(`INCHI KEY`)) %>%
filter(!is.na(food)) %>%
select(metabolite, food) %>%
separate_rows(food, sep = ",", convert = FALSE) %>%
mutate(food = str_trim(food),
food = str_replace_all(food, "Fruits", "plant fruit food product"),
food = str_replace_all(food, "Vegetables", "vegetable food product"),
food = str_replace_all(food, "Coffe", "coffee based beverage product"),
food = str_replace_all(food, "Tea", "tea based beverage product"),
food = str_replace_all(food, "Cacao", "cacao food product"),
food = str_replace_all(food, "Whole_Grain_Cereals", "Whole grain cereal products"),
food = str_replace_all(food, "Legumes", "legume food product"),
food = str_replace_all(food, "Nuts", "nut (whole or part)"),
food = str_replace_all(food, "red_wine", "red wine"),
food = str_replace_all(food, "olive_oil", "olive oil"),
food = str_replace_all(food, "apple", "apple (whole)"),
food = str_replace_all(food, "Banana", "banana (whole, ripe)"),
food = str_replace_all(food, "Berries", "berry (whole, raw)"),
food = str_replace_all(food, "Whole_Grain_Oat", "whole oats (raw)"),
food = str_replace_all(food, "producte", "product"))
table(new_met$food)
xlsx::write.xlsx(new_met, "files/relations.xlsx")
library(tidyverse)
library(classyfireR)
new_met <- readxl::read_excel("update ontology.xlsx")
library(tidyverse)
library(classyfireR)
new_met <- readxl::read_excel("update ontology.xlsx")
library(tidyverse)
library(classyfireR)
new_met <- readxl::read_excel("update ontology.xlsx")
library(ontologyIndex)
path <- "../ontology/fobi.obo"
ontology <- get_ontology(path, extract_tags = "everything")
ontology$name
mynames <- data.frame(ontology$name)
View(mynames)
new_met <- readxl::read_excel("update ontology.xlsx")
View(new_met)
library(ontologyIndex)
path <- "../ontology/fobi.obo"
ontology <- get_ontology(path, extract_tags = "everything")
mynames <- data.frame(metabolite = ontology$name)
final <- merge(mynames, new_met, by = "metabolite")
View(final)
library(tidyverse)
library(classyfireR)
new_met <- readxl::read_excel("update ontology.xlsx")
# new_met <- new_met %>%
#   filter(is.na(FOBI)) %>%
#   filter(!is.na(`INCHI KEY`)) %>%
#   filter(!is.na(food)) %>%
#   select(metabolite, food) %>%
#   separate_rows(food, sep = ",", convert = FALSE) %>%
#   mutate(food = str_trim(food),
#          food = str_replace_all(food, "Fruits", "plant fruit food product"),
#          food = str_replace_all(food, "Vegetables", "vegetable food product"),
#          food = str_replace_all(food, "Coffe", "coffee based beverage product"),
#          food = str_replace_all(food, "Tea", "tea based beverage product"),
#          food = str_replace_all(food, "Cacao", "cacao food product"),
#          food = str_replace_all(food, "Whole_Grain_Cereals", "Whole grain cereal products"),
#          food = str_replace_all(food, "Legumes", "legume food product"),
#          food = str_replace_all(food, "Nuts", "nut (whole or part)"),
#          food = str_replace_all(food, "red_wine", "red wine"),
#          food = str_replace_all(food, "olive_oil", "olive oil"),
#          food = str_replace_all(food, "apple", "apple (whole)"),
#          food = str_replace_all(food, "Banana", "banana (whole, ripe)"),
#          food = str_replace_all(food, "Berries", "berry (whole, raw)"),
#          food = str_replace_all(food, "Whole_Grain_Oat", "whole oats (raw)"),
#          food = str_replace_all(food, "producte", "product"))
# classification_result <- list()
#
# for(i in 1:nrow(new_met)){
#
#   classification_result[[i]] <- get_classification(new_met$`INCHI KEY`[i])
#
# }
# xlsx::write.xlsx(new_met, "files/relations.xlsx")
new_met <- new_met %>%
filter(is.na(FOBI)) %>%
filter(!is.na(`INCHI KEY`))
library(ontologyIndex)
path <- "../ontology/fobi.obo"
ontology <- get_ontology(path, extract_tags = "everything")
mynames <- data.frame(metabolite = ontology$name)
final <- merge(mynames, new_met, by = "metabolite")
View(final)
library(tidyverse)
library(classyfireR)
new_met <- readxl::read_excel("update ontology.xlsx")
# new_met <- new_met %>%
#   filter(is.na(FOBI)) %>%
#   filter(!is.na(`INCHI KEY`)) %>%
#   filter(!is.na(food)) %>%
#   select(metabolite, food) %>%
#   separate_rows(food, sep = ",", convert = FALSE) %>%
#   mutate(food = str_trim(food),
#          food = str_replace_all(food, "Fruits", "plant fruit food product"),
#          food = str_replace_all(food, "Vegetables", "vegetable food product"),
#          food = str_replace_all(food, "Coffe", "coffee based beverage product"),
#          food = str_replace_all(food, "Tea", "tea based beverage product"),
#          food = str_replace_all(food, "Cacao", "cacao food product"),
#          food = str_replace_all(food, "Whole_Grain_Cereals", "Whole grain cereal products"),
#          food = str_replace_all(food, "Legumes", "legume food product"),
#          food = str_replace_all(food, "Nuts", "nut (whole or part)"),
#          food = str_replace_all(food, "red_wine", "red wine"),
#          food = str_replace_all(food, "olive_oil", "olive oil"),
#          food = str_replace_all(food, "apple", "apple (whole)"),
#          food = str_replace_all(food, "Banana", "banana (whole, ripe)"),
#          food = str_replace_all(food, "Berries", "berry (whole, raw)"),
#          food = str_replace_all(food, "Whole_Grain_Oat", "whole oats (raw)"),
#          food = str_replace_all(food, "producte", "product"))
# classification_result <- list()
#
# for(i in 1:nrow(new_met)){
#
#   classification_result[[i]] <- get_classification(new_met$`INCHI KEY`[i])
#
# }
# xlsx::write.xlsx(new_met, "files/relations.xlsx")
new_met <- new_met %>%
filter(is.na(FOBI)) %>%
filter(!is.na(`INCHI KEY`))
library(ontologyIndex)
path <- "../ontology/fobi.obo"
ontology <- get_ontology(path, extract_tags = "everything")
mynames <- data.frame(metabolite = ontology$name)
mynames$FOBI <- rownames(mynames)
final <- merge(mynames, new_met, by = "metabolite")
library(tidyverse)
library(classyfireR)
new_met <- readxl::read_excel("update ontology.xlsx")
# new_met <- new_met %>%
#   filter(is.na(FOBI)) %>%
#   filter(!is.na(`INCHI KEY`)) %>%
#   filter(!is.na(food)) %>%
#   select(metabolite, food) %>%
#   separate_rows(food, sep = ",", convert = FALSE) %>%
#   mutate(food = str_trim(food),
#          food = str_replace_all(food, "Fruits", "plant fruit food product"),
#          food = str_replace_all(food, "Vegetables", "vegetable food product"),
#          food = str_replace_all(food, "Coffe", "coffee based beverage product"),
#          food = str_replace_all(food, "Tea", "tea based beverage product"),
#          food = str_replace_all(food, "Cacao", "cacao food product"),
#          food = str_replace_all(food, "Whole_Grain_Cereals", "Whole grain cereal products"),
#          food = str_replace_all(food, "Legumes", "legume food product"),
#          food = str_replace_all(food, "Nuts", "nut (whole or part)"),
#          food = str_replace_all(food, "red_wine", "red wine"),
#          food = str_replace_all(food, "olive_oil", "olive oil"),
#          food = str_replace_all(food, "apple", "apple (whole)"),
#          food = str_replace_all(food, "Banana", "banana (whole, ripe)"),
#          food = str_replace_all(food, "Berries", "berry (whole, raw)"),
#          food = str_replace_all(food, "Whole_Grain_Oat", "whole oats (raw)"),
#          food = str_replace_all(food, "producte", "product"))
# classification_result <- list()
#
# for(i in 1:nrow(new_met)){
#
#   classification_result[[i]] <- get_classification(new_met$`INCHI KEY`[i])
#
# }
# xlsx::write.xlsx(new_met, "files/relations.xlsx")
new_met <- new_met %>%
filter(is.na(FOBI)) %>%
filter(!is.na(`INCHI KEY`))
library(ontologyIndex)
path <- "../ontology/fobi.obo"
ontology <- get_ontology(path, extract_tags = "everything")
mynames <- data.frame(metabolite = ontology$name)
mynames$FOBI <- gsub("_", ":", rownames(mynames))
final <- merge(mynames, new_met, by = "metabolite")
xlsx::write.xlsx(final[,1:2], "files/FOBI.xlsx")
library(tidyverse)
library(classyfireR)
new_met <- readxl::read_excel("update ontology.xlsx")
# new_met <- new_met %>%
#   filter(is.na(FOBI)) %>%
#   filter(!is.na(`INCHI KEY`)) %>%
#   filter(!is.na(food)) %>%
#   select(metabolite, food) %>%
#   separate_rows(food, sep = ",", convert = FALSE) %>%
#   mutate(food = str_trim(food),
#          food = str_replace_all(food, "Fruits", "plant fruit food product"),
#          food = str_replace_all(food, "Vegetables", "vegetable food product"),
#          food = str_replace_all(food, "Coffe", "coffee based beverage product"),
#          food = str_replace_all(food, "Tea", "tea based beverage product"),
#          food = str_replace_all(food, "Cacao", "cacao food product"),
#          food = str_replace_all(food, "Whole_Grain_Cereals", "Whole grain cereal products"),
#          food = str_replace_all(food, "Legumes", "legume food product"),
#          food = str_replace_all(food, "Nuts", "nut (whole or part)"),
#          food = str_replace_all(food, "red_wine", "red wine"),
#          food = str_replace_all(food, "olive_oil", "olive oil"),
#          food = str_replace_all(food, "apple", "apple (whole)"),
#          food = str_replace_all(food, "Banana", "banana (whole, ripe)"),
#          food = str_replace_all(food, "Berries", "berry (whole, raw)"),
#          food = str_replace_all(food, "Whole_Grain_Oat", "whole oats (raw)"),
#          food = str_replace_all(food, "producte", "product"))
# classification_result <- list()
#
# for(i in 1:nrow(new_met)){
#
#   classification_result[[i]] <- get_classification(new_met$`INCHI KEY`[i])
#
# }
# xlsx::write.xlsx(new_met, "files/relations.xlsx")
new_met <- new_met %>%
filter(is.na(FOBI)) %>%
filter(!is.na(`INCHI KEY`))
library(ontologyIndex)
path <- "../ontology/fobi.obo"
ontology <- get_ontology(path, extract_tags = "everything")
mynames <- data.frame(metabolite = ontology$name)
mynames$FOBI <- gsub("_", ":", rownames(mynames))
final <- merge(mynames, new_met, by = "metabolite")
xlsx::write.xlsx(final[,1:2], "files/FOBI.xlsx")
library(tidyverse)
library(data.table)
fobi <- readr::read_csv("../fobi-export.csv")
fobi <- readr::read_csv("..fobi-export.csv")
fobi <- readr::read_csv("./fobi-export.csv")
getwd()
fobi <- readr::read_csv(".../fobi-export.csv")
fobi <- readr::read_csv("../fobi-export.csv")
fobi <- readr::read_csv("/home/pol/Escritorio/FoodBiomarkerOntology/fobi-export.csv")
fobi <- fobi[!(is.na(fobi$`http://purl.obolibrary.org/obo/FOBI_00422`)) ,]
fobi <- fobi[, c(4, 21)]
colnames(fobi) <- c("food", "label")
fobi <- readr::read_csv("/home/pol/Escritorio/FoodBiomarkerOntology/fobi-export.csv")
View(fobi)
View(fobi)
fobi <- readr::read_csv2("/home/pol/Escritorio/FoodBiomarkerOntology/fobi-export.csv")
View(fobi)
library(tidyverse)
library(data.table)
fobi <- readr::read_csv2("/home/pol/Escritorio/FoodBiomarkerOntology/fobi-export.csv")
View(fobi)
fobi <- readr::read_csv2("/home/pol/Escritorio/FoodBiomarkerOntology/fobi-export.csv")
View(fobi)
library(tidyverse)
library(data.table)
fobi <- readr::read_csv2("/home/pol/Escritorio/FoodBiomarkerOntology/fobi-export.csv")
View(fobi)
fobi <- readr::read_csv2("/home/pol/Escritorio/FoodBiomarkerOntology/fobi-export.csv")
# fobi <- fobi[!(is.na(fobi$`http://purl.obolibrary.org/obo/FOBI_00422`)) ,]
# fobi <- fobi[, c(4, 21)]
# colnames(fobi) <- c("food", "label")
fobi <- data.table(fobi)
dt_out <- fobi[, list(metabolite = Entity,
food = unlist(strsplit(BiomarkerOf, '\t'))),
by = 1:nrow(fobi)]
View(dt_out)
library(tidyverse)
library(data.table)
fobi <- readr::read_csv2("/home/pol/Escritorio/FoodBiomarkerOntology/fobi-export.csv")
# fobi <- fobi[!(is.na(fobi$`http://purl.obolibrary.org/obo/FOBI_00422`)) ,]
fobi <- fobi[!is.na(fobi$BiomarkerOf)]
fobi <- data.table(fobi)
dt_out <- fobi[, list(metabolite = Entity,
food = unlist(strsplit(BiomarkerOf, '\t'))),
by = 1:nrow(fobi)]
dt_out$nrow <- NULL
dt_out$metabolite <- gsub("'", '', dt_out$metabolite)
library(tidyverse)
library(data.table)
fobi <- readr::read_csv2("/home/pol/Escritorio/FoodBiomarkerOntology/fobi-export.csv")
fobi <- fobi[!is.na(fobi$BiomarkerOf)]
fobi <- readr::read_csv2("/home/pol/Escritorio/FoodBiomarkerOntology/fobi-export.csv")
fobi <- fobi[!is.na(fobi$BiomarkerOf), ]
fobi <- data.table(fobi)
dt_out <- fobi[, list(metabolite = Entity,
food = unlist(strsplit(BiomarkerOf, '\t'))),
by = 1:nrow(fobi)]
dt_out$nrow <- NULL
dt_out$metabolite <- gsub("'", '', dt_out$metabolite)
View(dt_out)
dt_out$food <- gsub('"', '', dt_out$food)
dt_out$food <- gsub('"', "", dt_out$food)
dt_out$food <- gsub('"', "", dt_out$food, fixed = T)
library(tidyverse)
library(data.table)
fobi <- readr::read_csv2("/home/pol/Escritorio/FoodBiomarkerOntology/fobi-export.csv")
# fobi <- fobi[!(is.na(fobi$`http://purl.obolibrary.org/obo/FOBI_00422`)) ,]
fobi <- fobi[!is.na(fobi$BiomarkerOf), ]
fobi <- data.table(fobi)
dt_out <- fobi[, list(metabolite = Entity,
food = unlist(strsplit(BiomarkerOf, '\t'))),
by = 1:nrow(fobi)]
dt_out$nrow <- NULL
dt_out$metabolite <- gsub("'", '', dt_out$metabolite)
dt_out$food <- gsub('"', "", dt_out$food, fixed = T)
View(dt_out)
dt_out$food <- gsub("'", "", dt_out$food, fixed = T)
View(dt_out)
library(tidyverse)
library(data.table)
fobi <- readr::read_csv2("/home/pol/Escritorio/FoodBiomarkerOntology/fobi-export.csv")
# fobi <- fobi[!(is.na(fobi$`http://purl.obolibrary.org/obo/FOBI_00422`)) ,]
fobi <- fobi[!is.na(fobi$BiomarkerOf), ]
fobi <- data.table(fobi)
dt_out <- fobi[, list(metabolite = Entity,
food = unlist(strsplit(BiomarkerOf, '\t'))),
by = 1:nrow(fobi)]
dt_out$nrow <- NULL
dt_out$metabolite <- gsub("'", '', dt_out$metabolite)
dt_out$food <- gsub("'", "", dt_out$food, fixed = T)
write.csv(dt_out, "200226_fobi_relations", row.names = F)
library(tidyverse)
library(data.table)
fobi <- readr::read_csv2("/home/pol/Escritorio/FoodBiomarkerOntology/fobi-export.csv")
fobi <- readr::read_csv2("/home/pol/Escritorio/FoodBiomarkerOntology/src/csv/200226_fobi-export.csv")
fobi <- fobi[!is.na(fobi$BiomarkerOf), ]
fobi <- data.table(fobi)
dt_out <- fobi[, list(metabolite = Entity,
food = unlist(strsplit(BiomarkerOf, '\t'))),
by = 1:nrow(fobi)]
dt_out$nrow <- NULL
dt_out$metabolite <- gsub("'", '', dt_out$metabolite)
dt_out$food <- gsub("'", "", dt_out$food, fixed = T)
View(dt_out)
library(tidyverse)
library(data.table)
fobi <- readr::read_csv2("/home/pol/Escritorio/FoodBiomarkerOntology/src/csv/200226_fobi-export.csv")
# fobi <- fobi[!(is.na(fobi$`http://purl.obolibrary.org/obo/FOBI_00422`)) ,]
fobi <- fobi[!is.na(fobi$BiomarkerOf), ]
fobi <- data.table(fobi)
dt_out <- fobi[, list(metabolite = Entity,
food = unlist(strsplit(BiomarkerOf, '\t'))),
by = 1:nrow(fobi)]
dt_out$nrow <- NULL
dt_out$metabolite <- gsub("'", '', dt_out$metabolite)
dt_out$food <- gsub("'", "", dt_out$food, fixed = T)
write.csv(dt_out, "200226_fobi_relations", row.names = F)
